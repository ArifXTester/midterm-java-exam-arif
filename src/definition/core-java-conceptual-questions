Please answer the below core-java Questions:

What is programing language?
A.
Programming language is a set of codes which contain instructions that allows human beings to communicate with computers

What jdk contains or composed of and define each components?
A.
1. Java Virtual Machine (JVM): It executes Java bytecode.
2. Java Runtime Environment (JRE): It's needed to run Java apps.
3. Java Compiler (javac): It compiles Java source code.
4. Java API Libraries: These provide core functionality.
5. Development Tools: Tools for coding and debugging.
6. Utilities: Tools like keytool, jar, etc.
7. Sample Code and Demos: Such as example programs.
8. Documentation: These provide detailed Java language resources.



What is IDE?
A.
An IDE in Java is a software tool called an "Integrated Development Environment"
that helps programmers write, test, and manage Java code more efficiently.


What are the IDEs available in the market to support java?
A.
The most popular IDE tools are Eclipse, IntelliJ, Visual Studio Code, JDeveloper, and NetBeans


Explain the entire java life cycle.
A.
1. Writing Code: Developers write Java code using a text editor or an Integrated Development Environment (IDE).
2. Saving Code: The Java code is saved with a .java extension.
3. Compiling: The Java Compiler (javac) is used to compile the .java source code files into bytecode files with a .class extension. This step checks for syntax errors.
4. Bytecode: The compiled bytecode is platform-independent and can be executed on any system with a Java Virtual Machine (JVM).
5. Running: The Java Virtual Machine (JVM) executes the bytecode by loading the .class files. It converts bytecode into machine-specific instructions for execution.
6. Execution: The Java program runs, performing the tasks specified in the code.
7. Output: If the code includes output statements (e.g., print statements), the program generates output that can be displayed on the screen or saved to files.
8. Termination: The program completes its execution and terminates.

Throughout this life cycle, developers can edit the Java source code, recompile it,
and run it again to test and refine their programs.  The compiled bytecode can be executed
on different systems AS LONG AS a compatible JVM is available.

Q. What is class?
A. In Java, a "class" is a blueprint or a template for creating objects.

Q. What is object?
A. In JAVA, 'object' is an instance created from a class. It represents a specific item or concept
   with characteristics (attributes) and behaviors (methods) defined by the class.

Q. What is the entry point of an application?
A. The entry point of an application in Java is the main method. This is where the program begins its execution.

Q. Why main is static?
A.The main method in Java is declared as static because it needs to be accessible without
  creating an instance of the class.

Q. Which class is the superclass of all classes?
A. The object class

Q. What is difference between path and classpath variables?
A. Path variable is used in reference to OS environment while classpath is specifically used for JAVA environment
    to locate classes & other resources required by JAVA applications.

Q. What is the difference between an Interface and Abstract class?
A. Abstract classes allow constructors & can have concrete methods but interface cannot.
   Interface supports multiple inheritance.

Q. Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
what is Access Specifier?
A. No you cannot. You use it by using the word 'implement' such as "class MyClass implements MyInterface"
Access specifier are keywords that determine the visibility or accessibility of classes, fields, methods, etc.
such as public, protected, default, & private

Q. What is OOP ? Define each feature of java OOP.
A.OOP is object oriented programming. OOP uses objects in JAVA code which instantiates java classes.
There are four ways by which OOPs are used: Encapsulation, Inheritance, Polymorphism, & Abstraction
 Encapsulation ensures that only the class itself can access and modify the data.
 Inheritance allows you to create a new class that is based on an existing class. Parent-child classesw.
 Polymorphism allows you to write code that can work with different types of objects using the
 same method or function.

Q. What is Java Package and which package is imported by default?
A.  a Java package is like a folder or directory that helps you organize &
    group related classes and resources together. java.lang is imported by default.

Q. What is API? Name list of API that you have used so far.
A. API stands for Application Programming Interface. It's like a menu of functions and features that
 developers can use to make their programs work with or "talk to" the Java program.

Q. Does java support multiple inheritance, explain why or why not?
A. Java does not support multiple inheritance because of multiple parent to child inheritance issue.
   Instead, JAVA uses interface.

Q. What is method overloading and when it happens?
A. Method overloading happens when you have multiple methods in the same class
   with the same name but different parameters

Q. Explain exceptions in java and how to handle it.
A. When something unexpected happens during the execution of a program, it's called an "exception."
   "exception handling" is what is used to handle exceptions & prevent them from crashing

Q. What is static keyword in java? How it has been used in variables and methods ?
A.  the "static" keyword in Java is used to create something that belongs to the class itself,
 rather than to individual objects. Static variables are shared among all objects of the class, &
  static methods are called on the class itself, not on specific instances.

Q. What is final and how it has been used variables and methods?
A. When "final" keyword is used, it determines the final outcome and cannot be changed when set.

Q. What is final, finally and finalize?
A. final is a keyword that is used to prevent the variable from changing.
   finally is used in exception handling to runa block of code no matter what.
   finalize is a method in Java that's called by the 'garbage collector' just before
   an object is removed from memory.
   
Q. What is a constructor?
A. A constructor in Java is like a setup method that prepares an object with its initial
   values and characteristics when you create it from a class.

Q. Can we have multiple constructors in a class?
A. Yes. It's called "constructor overloading."

Q. If we don't have a constructor declared, what is called during the object creation?
A.

Q. What is "this" keyword in java?
A. "This" keyword is like a little note that a method or constructor can use to refer to itself.

Q. What is "super" keyword in java? How many possible way can you use?
A. The "super" keyword in Java is used to refer to the parent or superclass of a class.
   Two ways: Call Parent class constructors & access overridden methods or variables.

Q. What is JVM stand for?
A. Java Virtual Machine

Q. Is JVM platform independent?
A. Yes

Q. What version of java are you using?
A. java version "11.0.19" 2023-04-18 LTS

Q. What is JAR stand for?
A. Java Archive.

Q. What is the difference between JDK and JVM?
A. JVM is a virtual computer that executes Java programs while JDK provides developers
   with the tools and resources to write and compile that Java code before it's run by the JVM.

Q. What is the difference between JVM and JRE?
A. You need JRE to run Java programs, and inside JRE, there's JVM that actually
   does the work of executing the programs.

Q. What is compile time and run time?
A. They are both phases in the life cycle of the computer program. Compile time is when your code is
  translated into a format that the computer can understand without actually running it,
  while run time is when the computer executes the compiled code to perform the desired tasks.

Q. What is heap?
A.

Q. How java manage it's memory?
A. Java manages its memory by automatically allocating space, cleaning up what's not being used.

Q. What is the difference between String, StringBuffer and StringBuilder?
A. The main difference is how they handle strings & their performance characteristics

Q. What is Singleton class?
A. Singleton class is like having only one instance of a particular class throughout the entire program.

Q. What is Serialization and Deserialization?
A. Serialization and Deserialization are processes used to convert complex data structures
  or objects into a format that can be easily stored, transmitted, or reconstructed later.

Q. When to use transient variable in java?
A. Serialization and Deserialization are processes used to convert complex data structures
  or objects into a format that can be easily stored, transmitted, or reconstructed later.

Q. Difference between while and do..while loop?
A. In while loop, the condition is checked at the beginning,
   and in do.while loop the condition is checked at the end.

Q. What is Enum?
A. Enum is used to define a fixed number of named values that can't be changed once they are defined.

Q. What is Iterator?
A. Iterators provide a way to access JAVA elements without exposing the underlying structure of the collection,
 making the code more flexible & maintainable.

Q. Which one will take more memory, an int or Integer?
A. Using int would be more memory efficient.

Q. Why is String Immutable in Java?
A.
In simple terms, a String is immutable in Java because once you create a String object,
  you cannot change its content.

Q. What is constructor chaining in Java?
A. Constructor chaining refers to the process of one constructor calling another constructor within the same class

Q. The difference between Serial and Parallel Garbage Collector?
A. Serial Garbage Collector operates sequentially to clean up memory in a computer program
    while Parallel Garbage Collector utilizes multiple threads. This also consumes more CPU resource.

Q. What is JIT stands for?
A. JIT is part of the Java Virtual Machine (JVM) that compiles Java bytecode into native machine code
   right before it's executed.

Q. Explain Java Heap space and Garbage collection?
A.  Java Heap Space is where Java programs store and manage their data, and Garbage Collection is
    the automatic process of cleaning up this space by removing unused objects to prevent memory issues
    and keep the program running smoothly.

Q. Can you guarantee the garbage collection process?
A.  No because it operates based on certain algorithms and heuristics so you cannot control precisely
    when it will occur or which objects will be collected.

Q. What is the difference between stack and heap in Java?
A. Stack is used for managing method calls and local variables, while the heap is a dynamic storage area
   for objects and data that can live beyond the scope of individual methods.

Q. What is reflection in java and why is it useful?
A. Reflection allows you to examine and manipulate the structure and behavior of Java classes, methods,
 fields, and objects at runtime. It allows for inspection of classes, creating instances of classes, and change value
 of fields, as well as invoke method on objects.

Q. What is multithreading in java?
A. Multithreading allows JAVA to perform different tasks simultaneously utilizing the thread class. It boosts
    efficiency and responsiveness.

Q. What is the use of synchronization in Java?
A. controls the flow of multiple threads in a program. It ensures that only one thread can access a
    particular section of code or data at a time, preventing conflicts and ensuring data integrity.
    It's used when invoking the "synchronized" keyword.

Q. What is Framework?
A. Framework is a set of tools that helps you build Java applications more efficiently.

Q. What are the testing Framework available in java?
A. They are JUnit, TestNG, Cucumber, and Selenium

Q. Difference between jUnit and testNG?
A.  JUnit is good for unit testing.
    TestNG is more robust and offers more advanced features like parallel execution, flexible test suite
     configuration, & richer annotations.

Q. What are the dependencies for this project?
A. JAVA Standard Library, JUnit, JDBC.

Q. What is dependency injection in java?
A. Dependency injection is like giving an object the things it needs to work, instead of letting it create
    those things itself.

Q. What is static binding and dynamic binding?
A.  They are different ways of connecting a function (method) call to the actual code that should be executed
    when the function is invoked. Static binding is determined at compile time based on the reference type,
    while dynamic binding is resolved at runtime based on the actual object's type.











